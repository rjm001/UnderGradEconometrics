knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message= F)
knitr::opts_chunk$set(warning = F)
knitr::opts_chunk$set(cache = TRUE)
my_wd <- "C:/Users/ryanj/Dropbox/TA/Econ 103/Winter 2018/Data/s4poe_statadata"
my_file <- paste(my_wd, "cps4_small.dta", sep = "/")
#library(haven)
dat <- read_stata(my_file)
library(haven)
my_wd <- "C:/Users/ryanj/Dropbox/TA/Econ 103/Winter 2018/Data/s4poe_statadata"
my_file <- paste(my_wd, "cps4_small.dta", sep = "/")
#library(haven)
dat <- read_stata(my_file)
#could also use
#haven::read_stata(my_file)
#for questions, type ?read_stata or ?haven::read_stata
dim(dat)
#View(dat)
EXPER30 = dat$exper - 30
dat2 <- cbind(dat, EXPER30)
library(ggplot2)
ggplot(data = dat2, aes(x = EXPER30, y = wage)) +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message= F)
knitr::opts_chunk$set(warning = F)
#You should set it to your own working directory
#Note that the \ slashes are the default, but you have to change these to
#either double backslashes or / as I did
# file location from computer: C:\Users\ryanj\Dropbox\TA\Econ 103\Winter 2018\Data
my_wd <- "C:/Users/ryanj/Dropbox/TA/Econ 103/Winter 2018/Data/s4poe_statadata"
my_file <- paste(my_wd, "cps4_small.dta", sep = "/")
#to read in stata files, need special package (many exist)
#install.packages('haven') #must run if haven't installed it yet
library(haven)
dat <- read_stata(my_file)
#could also use
#haven::read_stata(my_file)
#for questions, type ?read_stata or ?haven::read_stata
#Take a look
View(dat)
#################################################
#First looking at wage
#################################################
#refer to items with dollar sign
#these autocomplete, type the dollar sign then hit tab and choose from the
#dropdown menu. much easier than remembering the names
#these are the built in plots
summary(dat$wage) #5 number summary
boxplot(dat$wage, main = "Box and Whisker Plot for Wage")
hist(dat$wage)
#Note, ggplot2 has some fancier plots
#install.packages("ggplot2")
library(ggplot2)
ggplot(dat = dat, aes(wage, ..density..)) +
geom_histogram() +
geom_density(col = 'red') +
ggtitle("Wage Histogram and Density Estimate")
########################################################
#Education
#######################################################
summary(dat$educ) #5 number summary
boxplot(dat$educ, main = "Box and Whisker Plot for Wage")
## Education is discrete, so we go with a barplot
ggplot(dat = dat, aes(educ)) +
geom_bar() +
ggtitle("Education Bar Plot")
attach(dat)
reg_out <- lm(wage ~ educ + 1)
summary(reg_out)
#Plot using base functions
plot(educ, wage, main = "wage vs education and best fit in red")
abline(reg_out, col = "red")
#make a little fancier with ggplot
race  <- rep("white", nrow(dat))
race[black == 1] <- "black"
race[asian == 1] <- "asian"
my_coef <- reg_out$coefficients
my_coef
dat2 <-  cbind(dat, race) #adds extra column to dat
ggplot(data = dat2, aes(x= educ, y = wage, color = race)) +
geom_point() +
geom_abline(aes(intercept = my_coef[1],
slope = my_coef[2] )) +
ggtitle("Wage vs Education with Best Fit in Black")
resid <- reg_out$residuals
gender <- rep("male", nrow(dat))
gender[dat$female==1] <- "female"
dat3 <- cbind(dat2, resid,gender)
ggplot(data=dat3,aes(x = educ, y = resid, color = race) ) +
geom_point()
#repeat by gender
ggplot(data=dat3,aes(x = educ, y = resid, color = gender) ) +
geom_point()
log_wage <- log(wage)
log_dat <- cbind(dat3,log_wage)
log_reg <- lm(dat = log_dat, log_wage ~ educ)
summary(log_reg)
log_coef <- log_reg$coefficients
#marginal estimates at 12 and 14 years of education
log_coef[2] *exp(log_coef[1] + log_coef[2]* 12)
log_coef[2] *exp(log_coef[1] + log_coef[2]* 14)
#You should set it to your own working directory
#Note that the \ slashes are the default, but you have to change these to
#either double backslashes or / as I did
# file location from computer: C:\Users\ryanj\Dropbox\TA\Econ 103\Winter 2018\Data
my_wd <- "C:/Users/ryanj/Dropbox/TA/Econ 103/Winter 2018/Data/s4poe_statadata"
my_file <- paste(my_wd, "cps4_small.dta", sep = "/")
#to read in stata files, need special package (many exist)
#install.packages('haven') #must run if haven't installed it yet
library(haven)
dat <- read_stata(my_file)
#could also use
#haven::read_stata(my_file)
#for questions, type ?read_stata or ?haven::read_stata
#Take a look
View(dat)
#################################################
#First looking at wage
#################################################
#refer to items with dollar sign
#these autocomplete, type the dollar sign then hit tab and choose from the
#dropdown menu. much easier than remembering the names
#these are the built in plots
summary(dat$wage) #5 number summary
boxplot(dat$wage, main = "Box and Whisker Plot for Wage")
hist(dat$wage)
#Note, ggplot2 has some fancier plots
#install.packages("ggplot2")
library(ggplot2)
ggplot(dat = dat, aes(wage, ..density..)) +
geom_histogram() +
geom_density(col = 'red') +
ggtitle("Wage Histogram and Density Estimate")
########################################################
#Education
#######################################################
summary(dat$educ) #5 number summary
boxplot(dat$educ, main = "Box and Whisker Plot for Wage")
## Education is discrete, so we go with a barplot
ggplot(dat = dat, aes(educ)) +
geom_bar() +
ggtitle("Education Bar Plot")
attach(dat)
reg_out <- lm(wage ~ educ + 1)
summary(reg_out)
#Plot using base functions
plot(educ, wage, main = "wage vs education and best fit in red")
abline(reg_out, col = "red")
#make a little fancier with ggplot
race  <- rep("white", nrow(dat))
race[black == 1] <- "black"
race[asian == 1] <- "asian"
my_coef <- reg_out$coefficients
my_coef
dat2 <-  cbind(dat, race) #adds extra column to dat
ggplot(data = dat2, aes(x= educ, y = wage, color = race)) +
geom_point() +
geom_abline(aes(intercept = my_coef[1],
slope = my_coef[2] )) +
ggtitle("Wage vs Education with Best Fit in Black")
resid <- reg_out$residuals
gender <- rep("male", nrow(dat))
gender[dat$female==1] <- "female"
dat3 <- cbind(dat2, resid,gender)
ggplot(data=dat3,aes(x = educ, y = resid, color = race) ) +
geom_point()
#repeat by gender
ggplot(data=dat3,aes(x = educ, y = resid, color = gender) ) +
geom_point()
dat_male <- dat3[dat$female!=1,]
dat_female <- dat3[dat$female==1,]
dat_black <- dat3[dat$black==1,]
dat_white <- dat3[dat3$race=="white",]
#could also use (dat$black!=1) & (dat$asian!=1)
reg_male <- lm(data = dat_male, wage ~ educ)
reg_female <- lm(data = dat_female, wage ~ educ)
reg_white <- lm(data = dat_white, wage ~ educ)
reg_black <- lm(data = dat_black, wage ~ educ)
summary(reg_male)
summary(reg_female)
summary(reg_black)
summary(reg_white)
new.dat <- data.frame(educ = c(12,14,16))
predict.lm(reg_male, newdata =new.dat)
predict.lm(reg_female, newdata =new.dat)
predict.lm(reg_white, newdata =new.dat)
predict.lm(reg_black, newdata =new.dat)
plot(c(0,21),c(0,40), col = "white", main =
"Male- purple, Female- Blue, White- orange, Black-green",
xlab = "Education in Years",
ylab = "Estimated Wage in $/Hour")
abline(reg_male, col = "purple")
abline(reg_female, col = "blue")
abline(reg_white, col = "orange")
abline(reg_black, col = "green")
#needs fixed
#ggplot(aes(x = 1:20, y = seq(1,80, length.out = 20))) +
#  geom_abline(intercept = coef(reg_male)[1], slope = coef(reg_male)[2]) +
#  geom_abline(intercept = coef(reg_female)[1], slope = coef(reg_female)[2])
attach(dat3)
quad_reg <- lm(wage ~ 1 + I(educ^2)) #note, must use I()!
#because it's a formula object
summary(quad_reg)
quad_reg_coef <- quad_reg$coefficients
quad_reg_coef
12*quad_reg_coef[2]
14*quad_reg_coef[2]
quad_wage_est = quad_reg_coef[1] + sort(educ,decreasing = F)^2*quad_reg_coef[2]
plot(educ, wage)
abline(reg_out, col = "red")
lines(sort(educ,decreasing = F), quad_wage_est,col="blue")
#abline(quad_reg, col = "blue") #doesn't work
dat4 <- cbind(dat3,quad_wage_est)
ggplot(data = dat4) +
geom_point(aes(x = educ, y = wage, color = "points")) +
geom_point(aes(x = sort(educ,decreasing = F), y = quad_wage_est,color = 'quadratic Estimate')) +
geom_abline(intercept = my_coef[1], slope = my_coef[2])
hist(log(dat$wage))
log_wage <- log(wage)
log_dat <- cbind(dat3,log_wage)
log_reg <- lm(dat = log_dat, log_wage ~ educ)
summary(log_reg)
log_coef <- log_reg$coefficients
#marginal estimates at 12 and 14 years of education
log_coef[2] *exp(log_coef[1] + log_coef[2]* 12)
log_coef[2] *exp(log_coef[1] + log_coef[2]* 14)
knitr::opts_chunk$set(echo = TRUE)
x <- 1:6
y = c(4,6,7,7,9,11)
my_func <- function(b){
sum( (y - b*x)^2)
}
my_sup = seq(-100:100/10)
my_out <- my_func(my_sup)
sapply(my_func,my_sup)
my_out <- sapply(my_sup, my_func)
plot(my_sup, my_out)
my_sup
my_sup =-100:100/10
plot(my_sup, my_out)
my_sup =-500:100/10
my_out <- sapply(my_sup, my_func)
plot(my_sup, my_out)
my_sup =-100:100/10
my_out <- sapply(my_sup, my_func)
plot(my_sup, my_out)
sum(y)/sum(x)
lm(y ~x + 0)
sum(y)/sum(x)
sum(y*x)/sum(x^2)
plot(my_sup, my_out)
plot(x,y)
reg_out <- lm(y ~x + 0)
plot(x,y)
abline(reg_out)
plot(x,y)
abline(reg_out)
reg_out <- lm(y ~x + 0)
reg_out
plot(x,y)
abline(reg_out)
?abline
plot(x,y)
abline(v = reg_out$coefficients[1], col='red')
plot(x,y)
abline(h = reg_out$coefficients[1], col='red')
reg_out$coefficients[1]
y
plot(c(0,6),c(0,11), col = "white")
lines(x,y, type = "p")
abline(h = reg_out$coefficients[1], col='red')
plot(x,y)
abline(reg_out, col = "red")
reg_out
lm(y~x)
reg_out2 <- lm(y~x)
#abline(h = reg_out$coefficients[1], col='red')
plot(x,y)
abline(reg_out, col = "red")
abline(reg_out2, col = "blue")
plot(x,y)
abline(reg_out, col = "red")
abline(reg_out2, col = "blue")
abline(h = mean(x))
abline(v = mean(y))
mean(x)
plot(x,y)
abline(reg_out, col = "red")
abline(reg_out2, col = "blue")
abline(v = mean(x))
abline(h = mean(y))
reg_out$residuals
sum(reg_out$residuals*x)
sum(reg_out2$residuals*x)
